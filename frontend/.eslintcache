[{"/Users/kadir/ohj/w/GHMap/frontend/src/reportWebVitals.js":"1","/Users/kadir/ohj/w/GHMap/frontend/src/index.js":"2","/Users/kadir/ohj/w/GHMap/frontend/src/App.js":"3","/Users/kadir/ohj/w/GHMap/frontend/src/services/coordinates.js":"4","/Users/kadir/ohj/w/GHMap/frontend/src/services/sun.js":"5","/Users/kadir/ohj/w/GHMap/frontend/src/components/Map/Map.js":"6","/Users/kadir/ohj/w/GHMap/frontend/src/utils/MapGrid.js":"7","/Users/kadir/ohj/w/GHMap/frontend/src/components/Sidebar/Sidebar.js":"8","/Users/kadir/ohj/w/GHMap/frontend/src/services/map.js":"9","/Users/kadir/ohj/w/GHMap/frontend/src/utils/ShadowAlgorithm.js":"10"},{"size":362,"mtime":1609921963358,"results":"11","hashOfConfig":"12"},{"size":500,"mtime":1609921963353,"results":"13","hashOfConfig":"12"},{"size":1112,"mtime":1610314377272,"results":"14","hashOfConfig":"12"},{"size":349,"mtime":1609932782591,"results":"15","hashOfConfig":"12"},{"size":203,"mtime":1609932808403,"results":"16","hashOfConfig":"12"},{"size":5034,"mtime":1610500543393,"results":"17","hashOfConfig":"12"},{"size":231,"mtime":1610235394593,"results":"18","hashOfConfig":"12"},{"size":385,"mtime":1610323072918,"results":"19","hashOfConfig":"12"},{"size":408,"mtime":1610397548830,"results":"20","hashOfConfig":"12"},{"size":3780,"mtime":1610479015965,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"mjky8s",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},"/Users/kadir/ohj/w/GHMap/frontend/src/reportWebVitals.js",[],["44","45"],"/Users/kadir/ohj/w/GHMap/frontend/src/index.js",[],"/Users/kadir/ohj/w/GHMap/frontend/src/App.js",["46","47","48","49","50","51"],"/Users/kadir/ohj/w/GHMap/frontend/src/services/coordinates.js",[],"/Users/kadir/ohj/w/GHMap/frontend/src/services/sun.js",[],"/Users/kadir/ohj/w/GHMap/frontend/src/components/Map/Map.js",["52","53","54","55","56","57"],"/Users/kadir/ohj/w/GHMap/frontend/src/utils/MapGrid.js",[],"/Users/kadir/ohj/w/GHMap/frontend/src/components/Sidebar/Sidebar.js",["58"],"/Users/kadir/ohj/w/GHMap/frontend/src/services/map.js",[],"/Users/kadir/ohj/w/GHMap/frontend/src/utils/ShadowAlgorithm.js",["59"],"\nconst markShadows = (point_list, shadows) => {\n  for (let point of point_list) {\n    shadows[point[0]][point[1]] = 1\n  }\n}\n\nconst markLights = (point_list, shadows) => {\n  for (let point of point_list) {\n    shadows[point[0]][point[1]] = 0\n  }\n}\n\nconst bresenham = (x1, y1, z1, x2, y2, z2, img, shadows, height, width) => {\n  let visited_points = []\n  let dx = Math.abs(x2 - x1)\n  let dy = Math.abs(y2 - y1)\n  let dz = Math.abs(z2 - z1)\n  let x0 = x1\n  let y0 = y1\n  let xs = (x2 > x1 ? 1 : -1)\n  let ys = (y2 > y1 ? 1 : -1)\n  let zs = (z2 > z1 ? 1 : -1)\n\n  if (dx >= dy && dx >= dz) {\n    let p1 = 2*dy - dx \n    let p2 = 2*dz - dx \n    while (x1 !== x2) {\n      x1 += xs\n      if (x1 < 0 || x1 >= width) {\n        break\n      }\n      if (p1 >= 0) {\n        y1 += ys\n        if (y1 < 0 || y1 >= height)\n          break\n        p1 -= 2*dx\n      }\n      if (p2 >= 0) {\n        z1 += zs\n        p2 -= 2*dx\n      }\n      if (z1 < img[x1][y1]) {\n        break\n      }\n      p1 += 2*dy\n      p2 += 2*dz\n      visited_points.push([x1, y1])\n    }\n    markShadows(visited_points, shadows)\n    markLights([[x0, y0]], shadows)\n  } else if (dy >= dx && dy >= dz) {\n    let p1 = 2*dx - dy \n    let p2 = 2*dz - dy \n    while (y1 !== y2) {\n      y1 += ys \n      if (y1 < 0 || y1 >= height) {\n        break\n      }\n      if (p1 >= 0) { \n        x1 += xs\n        if (x1 < 0 || x1 >= width) {\n          break\n        }\n        p1 -= 2*dy\n      }\n      if (p2 >= 0) {\n        z1 += zs\n        p2 -= 2*dy\n      }\n      if (z1 < img[x1][y1]) {\n        break\n      }\n      p1 += 2*dx \n      p2 += 2*dz\n      visited_points.push([x1, y1])\n    }\n    markShadows(visited_points, shadows)\n    markLights([[x0, y0]], shadows)\n  } else {        \n    let p1 = 2*dy - dz \n    let p2 = 2*dx - dz \n    while (z1 !== z2) {\n      z1 += zs \n      if (p1 >= 0) {\n        y1 += ys\n        if (y1 < 0 || y1 >= height) {\n          break\n        }\n        p1 -= 2*dz\n      }\n      if (p2 >= 0) {\n        x1 += xs\n        if (x1 < 0 || x1 >= width) {\n          break\n        }\n        p2 -= 2*dz\n      }\n      if (z1 < img[x1][y1]) {\n          break\n      }\n      p1 += 2*dy \n      p2 += 2*dx\n      visited_points.push([x1, y1])\n    }\n    markShadows(visited_points, shadows)\n    markLights([[x0, y0]], shadows)\n  }\n}\n\nconst getShadows = (img, shadows, altitude, azimuth) => {\n  let alt = altitude*Math.PI/180\n  let azi = azimuth*Math.PI/180\n  const SUN_DIST = 100000\n  let sun_x = Math.round(Math.cos(azi) * SUN_DIST)\n  let sun_y = -Math.round(Math.sin(azi) * SUN_DIST)\n  let sun_z = -Math.round(Math.tan(alt) * 2 * SUN_DIST)\n  const height = img.length\n  const width = img[0].length\n    \n  for (let i=0; i<height; i++) {\n    for (let j=0; j<width; j++) {\n      if (shadows[i][j] === null) {\n        bresenham(i, j, img[i][j], sun_x, sun_y, sun_z, img, shadows, height, width)\n      }\n    }\n  }\n}\n\nconst constructHeightmap = (tiles, tilesize) => {\n  let xMin = Infinity\n  let yMin = Infinity\n  let xMax = -Infinity\n  let yMax = -Infinity\n  for (let tile of tiles) {\n    if (tile.x < xMin)\n      xMin = tile.x\n    if (tile.y < yMin)\n      yMin = tile.y\n    if (tile.x > xMax)\n      xMax = tile.x\n    if (tile.y > yMax)\n      yMax = tile.y\n  }\n  let res = [...Array((yMax-yMin)/2)].map(x=>Array((xMax-xMin)/2))\n  for (let tile of tiles) {\n    for (let y=0; y<tilesize; y++) {\n      for (let x=0; x<tilesize; x++) {\n        res[(tile.y-yMin)/(2*tilesize)+y][(tile.x-xMin)/(2*tilesize)+x] = tile.heightmap[y][x]\n      }\n    }\n  }\n  return res\n}\n\nconst computeShadows = (tiles) => {\n  let heightmap = constructHeightmap(tiles, 200)\n  let shadows = [...Array((heightmap.length)/2)].map(x=>Array((heightmap[0].length)/2).fill(null))\n  console.log(getShadows(heightmap, shadows, 20, 90))\n}\n\nexport default constructHeightmap",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":17},{"ruleId":"64","severity":1,"message":"68","line":10,"column":9,"nodeType":"66","messageId":"67","endLine":10,"endColumn":19},{"ruleId":"64","severity":1,"message":"69","line":11,"column":9,"nodeType":"66","messageId":"67","endLine":11,"endColumn":20},{"ruleId":"64","severity":1,"message":"70","line":12,"column":14,"nodeType":"66","messageId":"67","endLine":12,"endColumn":20},{"ruleId":"64","severity":1,"message":"71","line":13,"column":14,"nodeType":"66","messageId":"67","endLine":13,"endColumn":20},{"ruleId":"72","severity":1,"message":"73","line":20,"column":6,"nodeType":"74","endLine":20,"endColumn":8,"suggestions":"75"},{"ruleId":"64","severity":1,"message":"76","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":26},{"ruleId":"64","severity":1,"message":"77","line":19,"column":9,"nodeType":"66","messageId":"67","endLine":19,"endColumn":18},{"ruleId":"64","severity":1,"message":"78","line":19,"column":20,"nodeType":"66","messageId":"67","endLine":19,"endColumn":32},{"ruleId":"72","severity":1,"message":"79","line":28,"column":6,"nodeType":"74","endLine":28,"endColumn":12,"suggestions":"80"},{"ruleId":"72","severity":1,"message":"81","line":34,"column":6,"nodeType":"74","endLine":34,"endColumn":17,"suggestions":"82"},{"ruleId":"72","severity":1,"message":"83","line":44,"column":6,"nodeType":"74","endLine":44,"endColumn":16,"suggestions":"84"},{"ruleId":"64","severity":1,"message":"85","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":26},{"ruleId":"64","severity":1,"message":"86","line":156,"column":7,"nodeType":"66","messageId":"67","endLine":156,"endColumn":21},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'toWGS84' is defined but never used.","Identifier","unusedVar","'sunAzimuth' is assigned a value but never used.","'sunAltitude' is assigned a value but never used.","'setLat' is assigned a value but never used.","'setLon' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchSunAngles' and 'fetchXYCoordinates'. Either include them or remove the dependency array.","ArrayExpression",["89"],"'constructHeightmap' is defined but never used.","'heightmap' is assigned a value but never used.","'setHeightmap' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'mapToScreenCoords'. Either include it or remove the dependency array.",["90"],"React Hook useEffect has a missing dependency: 'drawMap'. Either include it or remove the dependency array.",["91"],"React Hook useEffect has missing dependencies: 'handleDragging' and 'handleMouseUp'. Either include them or remove the dependency array.",["92"],"'useEffect' is defined but never used.","'computeShadows' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [fetchSunAngles, fetchXYCoordinates]",{"range":"101","text":"102"},"Update the dependencies array to be: [mapToScreenCoords, x, y]",{"range":"103","text":"104"},"Update the dependencies array to be: [camCoords, drawMap]",{"range":"105","text":"106"},"Update the dependencies array to be: [dragging, handleDragging, handleMouseUp]",{"range":"107","text":"108"},[628,630],"[fetchSunAngles, fetchXYCoordinates]",[1113,1119],"[mapToScreenCoords, x, y]",[1225,1236],"[camCoords, drawMap]",[1539,1549],"[dragging, handleDragging, handleMouseUp]"]